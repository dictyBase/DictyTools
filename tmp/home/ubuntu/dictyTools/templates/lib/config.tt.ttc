#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.19
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1260998327',
        'name' => 'config.tt',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $error;
        
        eval { BLOCK: {
    
    $output .=  "\n\n";
    
    $output .=  "\n\n\n\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n\n\n\n";
    #line 39 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
    
    # MACRO
    $stash->set('css_link', sub {
        my $params = $_[0] if ref($_[0]) eq 'HASH';
        my $output = '';
    
        my $stash = $context->localise($params);
        eval {
    $output .=  $context->include('stylesheet_link');
        };
        $stash = $context->delocalise();
        die $@ if $@;
        return $output;
    });
    
    $output .=  "\n";
    #line 40 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
    
    # MACRO
    $stash->set('js_link', sub {
        my $params = $_[0] if ref($_[0]) eq 'HASH';
        my $output = '';
    
        my $stash = $context->localise($params);
        eval {
    $output .=  $context->include('javascript_link');
        };
        $stash = $context->delocalise();
        die $@ if $@;
        return $output;
    });
    
    $output .=  "\n";
    #line 41 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
    
    # MACRO
    $stash->set('icon_link', sub {
        my $params = $_[0] if ref($_[0]) eq 'HASH';
        my $output = '';
    
        my $stash = $context->localise($params);
        eval {
    $output .=  $context->include('icon_link');
        };
        $stash = $context->delocalise();
        die $@ if $@;
        return $output;
    });
    
    $output .=  "\n";
    #line 42 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
    
    # MACRO
    $stash->set('js_code', sub {
        my $params = $_[0] if ref($_[0]) eq 'HASH';
        my $output = '';
    
        my $stash = $context->localise($params);
        eval {
    $output .=  $context->include('javascript_code');
        };
        $stash = $context->delocalise();
        die $@ if $@;
        return $output;
    });
    
    $output .=  "\n\n";
        } };
        if ($@) {
            $error = $context->catch($@, \$output);
            die $error unless $error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'javascript_link' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        $output .=  "\n      ";
        #line 23 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $stash->set('type', 'text/javascript', 1);
        $output .=  "\n            <script\n                src=\"";
        #line 25 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $output .=  $stash->get('src');
        $output .=  "\"\n                type=\"";
        #line 26 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $output .=  $stash->get('type');
        $output .=  "\"\n            ></script>\n";
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
        'stylesheet_link' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        #line 9 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('collapse')
                      || $context->throw($context->error);
        
        $output .=  "\n     ";
        #line 2 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $stash->set('rel', 'stylesheet', 1);
        $stash->set('type', 'text/css', 1);
        $stash->set('media', 'all', 1);
        $output .=  "\n            <link\n                rel=\"";
        #line 4 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $output .=  $stash->get('rel');
        $output .=  "\"\n                type=\"";
        #line 5 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $output .=  $stash->get('type');
        $output .=  "\" \n                media=\"";
        #line 6 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $output .=  $stash->get('media');
        $output .=  "\" \n                href=\"";
        #line 7 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $output .=  $stash->get('href');
        $output .=  "\"\n            />\n";
            
            &$filter($output);
        };
        
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
        'icon_link' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        #line 18 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $filter = $context->filter('collapse')
                      || $context->throw($context->error);
        
        $output .=  "\n     ";
        #line 12 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $stash->set('rel', 'icon', 1);
        $stash->set('type', 'image/x-icon', 1);
        $output .=  "\n            <link\n                rel=\"";
        #line 14 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $output .=  $stash->get('rel');
        $output .=  "\"\n                type=\"";
        #line 15 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $output .=  $stash->get('type');
        $output .=  "\" \n                href=\"";
        #line 16 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $output .=  $stash->get('href');
        $output .=  "\"\n            />\n";
            
            &$filter($output);
        };
        
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
        'javascript_code' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $error;
            
            eval { BLOCK: {
        $output .=  "\n      ";
        #line 31 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $stash->set('type', 'text/javascript', 1);
        $output .=  "\n            <script type=\"";
        #line 32 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $output .=  $stash->get('type');
        $output .=  "\" >\n              ";
        #line 33 "/home/ubuntu/dictyTools/bin/../templates/lib/config.tt"
        $output .=  $context->insert($stash->get('code'));
        $output .=  "\n            </script>\n";
            } };
            if ($@) {
                $error = $context->catch($@, \$output);
                die $error unless $error->type eq 'return';
            }
        
            return $output;
        },
    },
});
